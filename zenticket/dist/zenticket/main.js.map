{"version":3,"sources":["./src/environments/environment.ts","./src/app/data.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/ticket-list/ticket-list.component.ts","./src/app/ticket-list/ticket-list.component.html","./src/app/app-routing.module.ts","./src/app/ticket-details/ticket-details.component.ts","./src/app/ticket-details/ticket-details.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport {Ticket, TicketResp} from './data.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  detailedViewActive: Subject<boolean> = new Subject();\n  activeTicket: Ticket;\n  email = '';\n  password = '';\n  subdomain = '';\n  url = `http://127.0.0.1:7999/`;\n  constructor(private httpClient: HttpClient) {}\n\n  getCredentials(email, password, subdomain): any {\n    this.email = email;\n    this.password = password;\n    this.subdomain = subdomain;\n  }\n\n  updateView(detailView: boolean): any {\n    this.detailedViewActive.next(detailView);\n  }\n\n  updateActiveTicket(ticket: Ticket): any {\n    this.activeTicket = ticket;\n  }\n\n  getData(): any {\n    return this.httpClient.post<TicketResp>(this.url, {email: this.email, password: this.password, subdomain: this.subdomain});\n  }\n\n  getDataWithPage(page): any {\n    return this.httpClient.post<TicketResp>(this.url+\"page\", {email: this.email, password: this.password, subdomain: this.subdomain, page});\n\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from './data.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  detailsView = false;\r\n  testInput = false;\r\n  \r\n  constructor(private dataService: DataService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Prompts to get the credentials from user\r\n    let email, password, subdomain: string;\r\n    email = prompt('enter email');\r\n    password = prompt('enter password');\r\n    subdomain = prompt('enter subdomain');\r\n\r\n    // Save user credentials in a service file\r\n    this.dataService.getCredentials(email, password, subdomain);\r\n    // Start the application in ListView and track the Current application view.\r\n    this.dataService.detailedViewActive.subscribe(res => this.detailsView = res);\r\n  }\r\n\r\n  gather\r\n}\r\n","<app-ticket-list [hidden]=\"detailsView\"></app-ticket-list>\n<app-ticket-details *ngIf=\"detailsView\"></app-ticket-details>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './header/header.component';\nimport { TicketListComponent } from './ticket-list/ticket-list.component';\nimport { TicketDetailsComponent } from './ticket-details/ticket-details.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatTableModule } from '@angular/material/table';\n// Material inputs\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatChipsModule} from '@angular/material/chips';\n\nconst materialImports = [MatCardModule,\n  MatPaginatorModule,\n  MatTableModule,\n  MatButtonModule,\n  MatProgressSpinnerModule,\n  MatChipsModule];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    TicketListComponent,\n    TicketDetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    ...materialImports\n  ],\n  exports: [\n    ...materialImports\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  // Render header based on user input.\n  @Input() content;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"header_container\">\n    <h1 class=\"header_container_content\">{{content}}</h1>\n</div>\n\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Ticket } from '../data.interface';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-ticket-list',\n  templateUrl: './ticket-list.component.html',\n  styleUrls: ['./ticket-list.component.scss']\n})\nexport class TicketListComponent implements OnInit {\n  ticketsList: Ticket[];\n  displayedColumns: string[] = ['Id', 'Subject', 'created_at', 'priority'];\n  dataSource = new MatTableDataSource([]);\n  detailView = false;\n  error = false;\n  errorMsg = 'There is an issue with the API, please try later or contact the admin team.';\n  currentPage = 1\n  pageSize = 25\n  maxPageReached = 1\n  loading = true\n  @ViewChild('paginator') paginator: MatPaginator;\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit(): void {\n    this.dataService.getData().subscribe(res => {\n      // If there is an error from the Zendesk API\n      if (res.hasOwnProperty('error')) {\n        this.error = true;\n        this.errorMsg = res.error.hasOwnProperty('message') ? res.error.message : res.error;\n      }\n      else {\n        // Fetching and constructing tickets in list view.\n        this.ticketsList = res.tickets;\n        // Faking the tickets counts so that paginator works\n        this.ticketsList.length = res.count\n        this.dataSource = new MatTableDataSource(this.ticketsList);\n        this.dataSource.paginator = this.paginator;\n        this.loading = false;\n      }\n    },\n      err => {\n        // If there is an error from the system backend\n        this.error = true;\n      });\n  }\n\n  // This method is for getting new tickets data\n  fetchNextPage(event): void {\n    if (event.pageIndex == this.maxPageReached) {\n      this.loading = true;\n      this.maxPageReached += 1;\n      this.dataService.getDataWithPage(this.maxPageReached).subscribe(res => {\n        this.loading = false;\n        this.ticketsList.length = this.currentPage * this.pageSize\n        this.currentPage += 1\n        this.ticketsList.push(...res.tickets)\n        \n        this.ticketsList.length = res.count\n        this.dataSource = new MatTableDataSource(this.ticketsList);\n        this.dataSource._updateChangeSubscription()\n        this.dataSource.paginator = this.paginator\n      })\n    }\n  }\n\n  // If user clicks on a ticket then detailed view should be shown.\n  ticketClicked(ticket): any {\n    this.dataService.updateActiveTicket(ticket);\n    this.dataService.updateView(true);\n  }\n\n}\n","<div class=\"ticket-list-container\">\n    <app-header [content]=\"'Tickets List'\"></app-header>\n\n    <div class=\"ticket-list-container__list-entries\">\n      <!-- If there is any error then the application should show error page -->\n      <div *ngIf=\"error\" class=\"ticket-list-container__list-entries__error\">\n          <div class=\"error-img\">\n            <img src=\"assets/error.svg\" alt=\"error\" height=\"200px\" width=\"200px\">\n          </div>\n          <div class=\"error-text\">{{ errorMsg }}</div>\n      </div>\n\n      <div *ngIf=\"!error\">\n        <div>\n          <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n            <!-- Each ng container represents a column in the table -->\n            <ng-container matColumnDef=\"Id\">\n              <th mat-header-cell *matHeaderCellDef> Id </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element?.id}} </td>\n            </ng-container>\n          \n            <ng-container matColumnDef=\"Subject\">\n              <th mat-header-cell *matHeaderCellDef> Subject </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element?.subject}} </td>\n            </ng-container>\n          \n            <ng-container matColumnDef=\"created_at\">\n              <th mat-header-cell *matHeaderCellDef> Created At </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element?.created_at | date}} </td>\n            </ng-container>\n          \n            <ng-container matColumnDef=\"priority\">\n                <th mat-header-cell *matHeaderCellDef> Priority </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element?.priority || \"not Available\"}} </td>\n            </ng-container>\n          \n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"ticketClicked(row)\"></tr>\n          </table>\n\n        <mat-paginator #paginator [pageSizeOptions]=\"[25]\" \n        class=\"mat-paginator-sticky\" (page)=\"fetchNextPage($event)\"></mat-paginator>\n        </div>\n        <!-- While loading data a Loader will be showed -->\n        <div *ngIf=\"loading\" class=\"ticket-list-container__list-entries__loading\">\n          <mat-spinner></mat-spinner>\n        </div>\n      </div>\n\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Ticket } from '../data.interface';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-ticket-details',\n  templateUrl: './ticket-details.component.html',\n  styleUrls: ['./ticket-details.component.scss']\n})\nexport class TicketDetailsComponent implements OnInit {\n  activeTicket: Ticket;\n  headerContent: string;\n  constructor(private dataService: DataService) { }\n\n  // On entering detailed view the complete info of the ticket should be displayed.\n  ngOnInit(): void {\n    this.activeTicket = this.dataService.activeTicket;\n    this.headerContent = `Active Ticket Id ${this.activeTicket?.id}`;\n  }\n\n  // On clicking back button list view should be displayed\n  returnToList(): any {\n    this.dataService.detailedViewActive.next(false);\n  }\n}\n","<div class=\"detailes-container\">\n    <app-header [content]=\"headerContent\"></app-header>\n    <div class=\"detailes-container__details\">\n        <div class=\"flex-row-display\">\n            <div class = \"name\">Ticket Created At</div>\n            <div>{{ activeTicket.created_at | date }}</div>\n        </div>\n        <div class=\"flex-row-display\">\n            <div class = \"name\">Created By</div>\n            <div>{{ activeTicket.requester_id  }}</div>\n        </div>\n        <div class=\"flex-row-display\">\n            <div class = \"name\">TAGS</div>\n            <mat-chip-list>\n                <mat-chip color=\"primary\" selected *ngFor=\"let tag of activeTicket.tags\">{{ tag }}</mat-chip>\n            </mat-chip-list>\n        </div>\n        <div class=\"flex-row-display\">\n            <div class = \"name\">Subject</div>\n            <div>{{ activeTicket.subject }}</div>\n        </div>\n        <div class=\"flex-row-display\">\n            <div class = \"name\">Ticket Description</div>\n            <div>{{ activeTicket.description  }}</div>\n        </div>\n        <div class=\"flex-row-display\">\n            <div class = \"name\">Ticket Priority</div>\n            <div>{{activeTicket.priority || \"not Available\"}}</div>\n        </div>\n        <div class=\"flex-row-display\">\n            <div class = \"name\">Attachments Allowed</div>\n            <div>{{ activeTicket.allow_attachments  }}</div>\n        </div>\n\n        <div class=\"flex-row-display\">\n            <div class = \"name\">Last Updated</div>\n            <div>{{ activeTicket.updated_at | date  }}</div>\n        </div>\n\n        <div class=\"flex-row-display\">\n            <div class = \"name\">Ticket Status</div>\n            <div>{{ activeTicket.status  }}</div>\n        </div>\n        <button mat-raised-button color=\"primary\" (click)=\"returnToList()\">Back To All Tickets</button>\n    </div>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}